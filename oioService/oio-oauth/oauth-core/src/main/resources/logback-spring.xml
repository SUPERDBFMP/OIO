<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">

    <substitutionProperty name="max.size" value="100MB"/>
    <contextName>fundNotice-logback</contextName>
    <property name="log.path" value="../../logs" />


    <!-- 读取application.yml中的属性 -->
    <springProperty scope="context" name="springAppName" source="spring.application.name" />

    <substitutionProperty name="log.pattern" value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(---){faint}  %yellow([%thread])  %clr(%-80.80logger{79}){cyan} %clr(:){faint} %m%n%wEx"/>
    <substitutionProperty name="my.log.pattern" value="%magenta(%d{yyyy-MM-dd HH:mm:ss.SSS}) %yellow([%thread]) %highlight(%-5level)    %cyan(%logger{10})  -%msg%n"/>

    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>




    <!-- 输出到控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>${log.pattern}</pattern>
        </encoder>
    </appender>

    <!--输出到文件-->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/oio-core.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/oauth.%d{yyyy-MM-dd}--%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${max.size}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxFileSize>${max.size}</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %-80.80logger{79} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 异步输出日志文件 -->
    <appender name ="asyncFile" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="file"/>
    </appender>

    <!-- 异步输出控制台 -->
    <appender name ="asyncConsole" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="STDOUT"/>
    </appender>

    <logger name="org.springframework.web.client.RestTemplate" level="info" additivity="false"/>
    <logger name="de.codecentric.boot.admin.client.registration.ApplicationRegistrator" level="info" additivity="false"/>
    <logger name="org.springframework.web.HttpLogging" level="info"  additivity="false"/>
    <logger name="org.apache.zookeeper.ClientCnxn" level="info"  additivity="false"/>
    <logger name="org.redisson" level="info"  additivity="false"/>
    <logger name="org.springframework.amqp.rabbit.core.RabbitTemplate" level="info"  additivity="false"/>
    <logger name="org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor" level="info"  additivity="false"/>
    <logger name="org.springframework.jdbc" level="info"  additivity="false"/>
    <logger name="org.springframework.boot.actuate" level="info"  additivity="false"/>
    <logger name="com.alibaba.druid.sql.Statement" additivity="false" level="warn"/>
    <logger name="com.alibaba.druid.sql.ResultSet" additivity="false" level="warn"/>

    <!-- 日志输出级别 按环境输出 -->
    <springProfile name="prod">
        <root level="debug">
            <appender-ref ref="asyncFile" />
        </root>
    </springProfile>

    <springProfile name="dev">
        <root level="debug">
            <appender-ref ref="asyncConsole"/>
            <appender-ref ref="asyncFile" />
        </root>
    </springProfile>

</configuration>
